{"version":3,"sources":["components/NavBarManu.js","components/Home.js","components/RestaurantCreate.js","components/RestaurantDetail.js","components/RestaurantList.js","components/RestaurantSearch.js","components/RestaurantUpdate.js","components/Login.js","components/Logout.js","components/Protected.js","App.js","serviceWorker.js","index.js"],"names":["NavBarManu","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","to","icon","faHome","faList","faPlusSquare","faSearch","localStorage","getItem","faUser","Component","Home","RestaurantCreate","state","name","email","address","rating","fetch","method","headers","body","JSON","stringify","this","then","result","json","resp","alert","onChange","event","setState","target","value","placeholder","onClick","create","RestaurantDetail","RestaurantList","list","getData","response","Table","striped","bordered","hover","map","item","i","faEdit","color","delete","faTrash","RestaurantSearch","searchData","noData","lastSearch","key","console","warn","data","length","search","Container","FormControl","type","RestaurantUpdate","props","match","params","update","Login","password","setItem","history","push","login","Logout","clear","Protected","Cmp","component","rest","render","App","path","exact","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d0c1aff6.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faList, faHome, faPlusSquare, faSearch, faUser } from '@fortawesome/free-solid-svg-icons'\r\nimport { Nav, Navbar } from \"react-bootstrap\";\r\n\r\nclass NavBarManu extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar bg=\"light\" expand=\"lg\">\r\n                    <Navbar.Brand href=\"#home\">Resto</Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"mr-auto\">\r\n                            <Nav.Link href=\"#link\">\r\n                                <Link to=\"/\"><FontAwesomeIcon icon={faHome} /> Home</Link>\r\n                            </Nav.Link>\r\n                            <Nav.Link href=\"#link\">\r\n                                <Link to=\"/list\"><FontAwesomeIcon icon={faList} /> List</Link>\r\n                            </Nav.Link><Nav.Link href=\"#link\"><Link to=\"/create\"><FontAwesomeIcon icon={faPlusSquare} />Create</Link></Nav.Link>\r\n                            <Nav.Link href=\"#link\"><Link to=\"/search\"><FontAwesomeIcon icon={faSearch} />Search</Link></Nav.Link>\r\n                            {\r\n                                localStorage.getItem('login') ?\r\n                                    <Nav.Link href=\"#link\"><Link to=\"/logout\"><FontAwesomeIcon icon={faUser} />Logout</Link></Nav.Link>\r\n                                    :\r\n                                    <Nav.Link href=\"#link\"><Link to=\"/login\"><FontAwesomeIcon icon={faUser} />Login</Link></Nav.Link>\r\n                            }\r\n\r\n\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default NavBarManu","import React, { Component } from \"react\";\r\nimport NavBarManu from \"./NavBarManu\";\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <NavBarManu />\r\n        <h1>Home</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\nimport NavBarManu from \"./NavBarManu\";\r\n\r\nclass RestaurantCreate extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      name: null,\r\n      email: null,\r\n      address: null,\r\n      rating: null\r\n    }\r\n  }\r\n\r\n  create() {\r\n    fetch(\"http://localhost:3000/restaurant\", {\r\n      method: \"Post\",\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(this.state)\r\n    }).then((result) => {\r\n      result.json().then((resp) => {\r\n        alert(\"Restaurant has been added\")\r\n      })\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <NavBarManu />\r\n        <h1>Restaurant Create</h1>\r\n        <div>\r\n          <input onChange={(event) => { this.setState({ name: event.target.value }) }}\r\n            placeholder=\"Restaurant Name\" /> <br /> <br />\r\n          <input onChange={(event) => { this.setState({ email: event.target.value }) }}\r\n            placeholder=\"Restaurant Email\" /><br /> <br />\r\n          <input onChange={(event) => { this.setState({ rating: event.target.value }) }}\r\n            placeholder=\"Restaurant Rating\" /><br /> <br />\r\n          <input onChange={(event) => { this.setState({ address: event.target.value }) }}\r\n            placeholder=\"Restaurant Address\" /><br /> <br />\r\n\r\n          <button onClick={() => { this.create() }}>Add Restaurant</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RestaurantCreate;\r\n","import React, { Component } from \"react\";\r\nimport NavBarManu from \"./NavBarManu\";\r\n\r\nclass RestaurantDetail extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <NavBarManu />\r\n        <h1>Restaurant List</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RestaurantDetail;\r\n","import React, { Component } from \"react\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport NavBarManu from \"./NavBarManu\";\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faEdit, faTrash } from '@fortawesome/free-solid-svg-icons'\r\n\r\nclass RestaurantList extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      list: null,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.getData()\r\n  }\r\n  getData() {\r\n    fetch(\"http://localhost:3000/restaurant\").then((response) => {\r\n      response.json().then((result) => {\r\n        this.setState({ list: result })\r\n      })\r\n    })\r\n  }\r\n\r\n  delete(id) {\r\n    fetch(\"http://localhost:3000/restaurant/\" + id, {\r\n      method: \"DELETE\",\r\n      // headers: {\r\n      //   'Content-Type': 'application/json'\r\n      // },\r\n    }).then((result) => {\r\n      result.json().then((resp) => {\r\n        alert(\"Restaurant has been Delete\")\r\n        this.getData();\r\n      })\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <NavBarManu />\r\n        <h1>Restaurant List</h1>\r\n        {this.state.list ? (\r\n          <div>\r\n            <Table striped bordered hover>\r\n              <thead>\r\n                <tr>\r\n                  <th>#</th>\r\n                  <th>Name</th>\r\n                  <th>Rating</th>\r\n                  <th>Location</th>\r\n                  <th>Email</th>\r\n                  <th>Operation</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {this.state.list.map((item, i) => (\r\n                  <tr>\r\n                    <td>{item.id}</td>\r\n                    <td>{item.name}</td>\r\n                    <td>{item.rating}</td>\r\n                    <td>{item.address}</td>\r\n                    <td>{item.email}</td>\r\n                    <td><Link to={\"/update/\" + item.id}><FontAwesomeIcon icon={faEdit} color=\"orange\" /></Link>\r\n                      <span onClick={() => this.delete(item.id)}><FontAwesomeIcon icon={faTrash} color=\"red\" /></span></td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </Table>\r\n          </div>\r\n        ) : (\r\n            <p>Please wait...</p>\r\n          )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RestaurantList;\r\n","import React, { Component } from 'react'\r\nimport { Table, FormControl, Container } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport NavBarManu from \"./NavBarManu\";\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faEdit, faTrash } from '@fortawesome/free-solid-svg-icons'\r\n\r\nclass RestaurantSearch extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      searchData: null,\r\n      noData: false,\r\n      lastSearch: \"\"\r\n    }\r\n  }\r\n\r\n  search(key) {\r\n    console.warn(key);\r\n    this.setState({ lastSearch: key })\r\n    fetch(\"http://localhost:3000/restaurant?q=\" + key).then((data) => {\r\n      data.json().then((resp) => {\r\n        console.warn(\"resp\", resp);\r\n        if (resp.length > 0) {\r\n          this.setState({ searchData: resp, noData: false })\r\n        }\r\n        else {\r\n          this.setState({ noData: true, searchData: null })\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  delete(id) {\r\n    fetch(\"http://localhost:3000/restaurant/\" + id, {\r\n      method: \"DELETE\",\r\n      // headers: {\r\n      //   'Content-Type': 'application/json'\r\n      // },\r\n    }).then((result) => {\r\n      result.json().then((resp) => {\r\n        alert(\"Restaurant has been Delete\")\r\n        this.search(this.state.lastSearch);\r\n      })\r\n    })\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <NavBarManu />\r\n        <h1>Restaurant Search</h1>\r\n        <FormControl type=\"text\" onChange={(event) => this.search(event.target.value)} placeholder=\"Search Restaurant\" />\r\n        <div>\r\n          {\r\n            this.state.searchData ?\r\n              <div>\r\n                <Table striped bordered hover>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>#</th>\r\n                      <th>Name</th>\r\n                      <th>Rating</th>\r\n                      <th>Location</th>\r\n                      <th>Email</th>\r\n                      <th>Operation</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {\r\n                      this.state.searchData.map((item) =>\r\n                        <tr>\r\n                          <td>{item.id}</td>\r\n                          <td>{item.name}</td>\r\n                          <td>{item.rating}</td>\r\n                          <td>{item.address}</td>\r\n                          <td>{item.email}</td>\r\n                          <td><Link to={\"/update/\" + item.id}><FontAwesomeIcon icon={faEdit} color=\"orange\" /></Link>\r\n                            <span onClick={() => this.delete(item.id)}><FontAwesomeIcon icon={faTrash} color=\"red\" /></span></td>\r\n                        </tr>\r\n                      )\r\n                    }\r\n                  </tbody>\r\n                </Table>\r\n              </div>\r\n              : \"\"\r\n          }\r\n          {\r\n            this.state.noData ? <h3>No Data Found</h3> : null\r\n          }\r\n        </div>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default RestaurantSearch;","import React, { Component } from \"react\";\r\nimport NavBarManu from \"./NavBarManu\";\r\n\r\nclass RestaurantUpdate extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      name: null,\r\n      email: null,\r\n      address: null,\r\n      rating: null,\r\n      id: null,\r\n    }\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    fetch(\"http://localhost:3000/restaurant/\" + this.props.match.params.id).then((response) => {\r\n      response.json().then((result) => {\r\n        console.warn(result)\r\n        this.setState({\r\n          name: result.name,\r\n          email: result.email,\r\n          rating: result.rating,\r\n          address: result.address,\r\n          id: result.id,\r\n\r\n        })\r\n      });\r\n    });\r\n  }\r\n\r\n  update() {\r\n    fetch(\"http://localhost:3000/restaurant/\" + this.state.id, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(this.state)\r\n    }).then((result) => {\r\n      result.json().then((resp) => {\r\n        alert(\"Restaurant has been Update\")\r\n      })\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <NavBarManu />\r\n        <h1>Restaurant Update</h1>\r\n        <div>\r\n          <input onChange={(event) => { this.setState({ name: event.target.value }) }}\r\n            placeholder=\"Restaurant Name\" value={this.state.name} /> <br /> <br />\r\n          <input onChange={(event) => { this.setState({ email: event.target.value }) }}\r\n            placeholder=\"Restaurant Email\" value={this.state.email} /><br /> <br />\r\n          <input onChange={(event) => { this.setState({ rating: event.target.value }) }}\r\n            placeholder=\"Restaurant Rating\" value={this.state.rating} /><br /> <br />\r\n          <input onChange={(event) => { this.setState({ address: event.target.value }) }}\r\n            placeholder=\"Restaurant Address\" value={this.state.address} /><br /> <br />\r\n\r\n          <button onClick={() => { this.update() }}>Update Restaurant</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RestaurantUpdate;\r\n","import React, { Component } from 'react'\r\n\r\nimport NavBarManu from \"./NavBarManu\";\r\n\r\nclass Login extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            name: \"\",\r\n            password: \"\"\r\n        }\r\n    }\r\n\r\n    login() {\r\n        console.warn(this.state);\r\n        fetch(\"http://localhost:3000/login?q=\" + this.state.name).then((data) => {\r\n            data.json().then((resp) => {\r\n                console.warn(\"resp\", resp);\r\n                if (resp.length > 0) {\r\n                    localStorage.setItem('login', JSON.stringify(resp))\r\n                    console.warn(this.props.history.push('list'));\r\n\r\n                }\r\n                else {\r\n                    alert(\"Please check the Username and Password\")\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <NavBarManu />\r\n                <input name=\"user\" placeholder=\"Enter Name\" type=\"text\" onChange={(event) => this.setState({ name: event.target.value })} /> <br /><br />\r\n                <input name=\"password\" placeholder=\"Enter Password\" type=\"password\" onChange={(event) => this.setState({ password: event.target.value })} /> <br /><br />\r\n                <button onClick={() => { this.login() }}>Login</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\n\r\nconst Logout = () => {\r\n    localStorage.clear();\r\n    return <Redirect to=\"/login\" />\r\n};\r\n\r\nexport default Logout;","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom'\r\nconst Protected = ({ component: Cmp, ...rest }) => (\r\n    <Route\r\n        {...rest}\r\n        render={(props) =>\r\n            localStorage.getItem(\"login\") ? (\r\n                <Cmp {...props} />\r\n            ) :\r\n                <Redirect to=\"/login\" />\r\n        }\r\n    />\r\n)\r\n\r\nexport default Protected;","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Ashh, Route } from \"react-router-dom\";\n\n\nimport Home from \"./components/Home\";\nimport RestaurantCreate from \"./components/RestaurantCreate\";\nimport RestaurantDetail from \"./components/RestaurantDetail\";\nimport RestaurantList from \"./components/RestaurantList\";\nimport RestaurantSearch from \"./components/RestaurantSearch\";\nimport RestaurantUpdate from \"./components/RestaurantUpdate\";\nimport Login from \"./components/Login\";\nimport Logout from \"./components/Logout\"\nimport Protected from \"./components/Protected\"\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n\n      <Ashh>\n\n        <Route path=\"/login\"\n          render={props => (\n            <Login {...props} />\n          )}>\n        </Route>\n\n        <Route path=\"/logout\">\n          <Logout />\n        </Route>\n        <Protected path=\"/list\" component={RestaurantList} />\n        <Protected path=\"/create\" component={RestaurantCreate} />\n        <Protected path=\"/search\" component={RestaurantSearch} />\n        <Protected path=\"/details\" component={RestaurantDetail} />\n        <Protected path=\"/update/:id\" component={RestaurantUpdate} />\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n\n\n      </Ashh>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}